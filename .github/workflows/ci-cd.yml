name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Manual triggers also available

jobs:
  # Test Backend
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run linting
      working-directory: ./backend
      run: npm run lint
      
    - name: Run type checking
      working-directory: ./backend
      run: npm run type-check
      
    - name: Build project
      working-directory: ./backend
      run: npm run build
      
    - name: Run tests (unit + e2e)
      working-directory: ./backend
      run: npm run test:ci-safe
      
    - name: Generate coverage report
      working-directory: ./backend
      run: npm run test:coverage

  # Test Frontend
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.4'
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      working-directory: ./mobile
      run: flutter pub get
      
    - name: Run analyze
      working-directory: ./mobile
      run: flutter analyze --no-fatal-infos
      
    - name: Run tests
      working-directory: ./mobile
      run: flutter test
      
    - name: Build web
      working-directory: ./mobile
      run: flutter build web --release

  # Deploy Backend to Render
  deploy-backend:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        wait-for-success: true

  # Deploy Frontend to Firebase
  deploy-frontend:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: false  # Temporarily disabled - requires FIREBASE_SERVICE_ACCOUNT secret
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.4'
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      working-directory: ./mobile
      run: flutter pub get
      
    - name: Build web for production
      working-directory: ./mobile
      run: flutter build web --release
      
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: tennis-management-fcd54
