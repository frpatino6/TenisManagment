"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const ProfessorController_1 = require("../../application/controllers/ProfessorController");
const JwtService_1 = require("../../infrastructure/services/JwtService");
const auth_1 = require("../../application/middleware/auth");
const validation_1 = require("../../application/middleware/validation");
const auth_2 = require("../../application/dtos/auth");
const config_1 = require("../../infrastructure/config");
const router = (0, express_1.Router)();
const jwt = new JwtService_1.JwtService(config_1.config.jwtSecret);
const controller = new ProfessorController_1.ProfessorController();
router.use((0, auth_1.authMiddleware)(jwt), (0, auth_1.requireRole)('professor'));
router.get('/schedule', controller.getSchedule);
router.post('/schedule', (0, validation_1.validateBody)(auth_2.PublishScheduleSchema), controller.createSchedule);
router.put('/schedule/:id', (0, validation_1.validateBody)(auth_2.UpdateAvailabilitySchema), controller.updateSchedule);
router.delete('/schedule/:id', controller.deleteSchedule);
router.get('/income-report', controller.incomeReport);
router.get('/students', controller.listStudents);
router.post('/services', (0, validation_1.validateBody)(auth_2.ServiceCreateSchema), controller.createService);
router.put('/services/:id', (0, validation_1.validateBody)(auth_2.ServiceUpdateSchema), controller.updateService);
router.get('/services', controller.listServices);
router.delete('/services/:id', controller.deleteService);
router.post('/payments', (0, validation_1.validateBody)(auth_2.PaymentCreateSchema), controller.createPayment);
exports.default = router;
//# sourceMappingURL=professor.js.map